{"ast":null,"code":"import _toConsumableArray from \"E:\\\\projects\\\\merger\\\\front-end-merger\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:\\\\projects\\\\merger\\\\front-end-merger\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"E:\\\\projects\\\\merger\\\\front-end-merger\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\projects\\\\merger\\\\front-end-merger\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\projects\\\\merger\\\\front-end-merger\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\projects\\\\merger\\\\front-end-merger\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\projects\\\\merger\\\\front-end-merger\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"E:\\\\projects\\\\merger\\\\front-end-merger\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"E:\\\\projects\\\\merger\\\\front-end-merger\\\\src\\\\Components\\\\MyDiagram.js\";\nimport React from 'react';\nimport * as go from 'gojs';\nimport { ToolManager, Diagram } from 'gojs';\nimport { GojsDiagram, ModelChangeEventType } from 'react-gojs';\nimport './MyDiagram.css';\nimport LeftSide from './LeftSide';\n\nvar MyDiagram =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyDiagram, _React$Component);\n\n  function MyDiagram(props) {\n    var _this;\n\n    _classCallCheck(this, MyDiagram);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyDiagram).call(this, props));\n    _this.nodeId = 0;\n    _this.addChild = true;\n    _this.addChildTitle = React.createRef();\n    _this.addPersonalForm = React.createRef();\n    _this.editPersonalForm = React.createRef();\n    _this.fname = React.createRef();\n    _this.sname = React.createRef();\n    _this.birth = React.createRef();\n    _this.female = React.createRef();\n    _this.male = React.createRef();\n    _this.other = React.createRef();\n    _this.selectedGender = \"female\";\n    _this.birthday = React.createRef();\n    _this.living = React.createRef();\n    _this.showfname = React.createRef();\n    _this.showsname = React.createRef();\n    _this.showbirth = React.createRef();\n    _this.editFlag = false;\n    _this.createDiagram = _this.createDiagram.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.modelChangeHandler = _this.modelChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.initModelHandler = _this.initModelHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateColorHandler = _this.updateColorHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.nodeSelectionHandler = _this.nodeSelectionHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeNode = _this.removeNode.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeLink = _this.removeLink.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addNode = _this.addNode.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateNodeText = _this.updateNodeText.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTextEdited = _this.onTextEdited.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onAddCheck = _this.onAddCheck.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onAddCancel = _this.onAddCancel.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onEdit = _this.onEdit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onAddChild = _this.onAddChild.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onAddParent = _this.onAddParent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.selectedNodeKey = null;\n    _this.state = {\n      selectedNodeKeys: [],\n      model: {\n        nodeDataArray: [{\n          key: \"me\",\n          label: \"Me\",\n          color: \"red\",\n          fname: \"Me\",\n          sname: \"Me\",\n          birth: \"1/4/1993\",\n          gender: \"male\",\n          living: true,\n          parent: 1\n        }],\n        linkDataArray: []\n      }\n    };\n    return _this;\n  }\n\n  _createClass(MyDiagram, [{\n    key: \"render\",\n    value: function render() {\n      return [React.createElement(\"div\", {\n        key: \"myDiagramContainer\",\n        className: \"row my-diagram\",\n        style: {\n          marginTop: 30 + 'px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(LeftSide, {\n        key: \"leftSide\",\n        addChildTitle: this.addChildTitle,\n        addPersonalForm: this.addPersonalForm,\n        editPersonalForm: this.editPersonalForm,\n        fname: this.fname,\n        sname: this.sname,\n        birth: this.birth,\n        female: this.female,\n        male: this.male,\n        other: this.other,\n        selectedGender: this.selectedGender,\n        birthday: this.birthday,\n        living: this.living,\n        showfname: this.showfname,\n        showsname: this.showsname,\n        showbirth: this.showbirth,\n        onInit: this.initModelHandler,\n        onAddNode: this.addNode,\n        onAddCancel: this.onAddCancel,\n        onEdit: this.onEdit,\n        onAddChild: this.onAddChild,\n        onAddParent: this.onAddParent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        key: \"gojsDiagramContainer\",\n        className: \"col-sm-8 canvas-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(GojsDiagram, {\n        key: \"gojsDiagram\",\n        diagramId: \"myDiagramDiv\",\n        model: this.state.model,\n        createDiagram: this.createDiagram,\n        className: \"myDiagram\",\n        onModelChange: this.modelChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })))];\n    }\n  }, {\n    key: \"initModelHandler\",\n    value: function initModelHandler() {\n      this.setState(_objectSpread({}, this.state, {\n        model: {\n          nodeDataArray: [{\n            key: \"me\",\n            label: \"Me Me\",\n            color: \"blue\",\n            fname: \"Me\",\n            sname: \"Me\",\n            birth: \"1/4/1993\",\n            gender: \"male\",\n            living: true,\n            parent: 1\n          }, {\n            key: \"mother\",\n            label: \"Mother Mom\",\n            color: \"pink\",\n            fname: \"Mother\",\n            sname: \"Mom\",\n            birth: \"1/4/1993\",\n            gender: \"female\",\n            living: true,\n            parent: 2\n          }, {\n            key: \"father\",\n            label: \"Father Dad\",\n            color: \"blue\",\n            fname: \"Father\",\n            sname: \"Dad\",\n            birth: \"1/4/1993\",\n            gender: \"male\",\n            living: true,\n            parent: 2\n          }, {\n            key: \"grandmamom\",\n            label: \"Grandmother Mom\",\n            color: \"pink\",\n            fname: \"Grandmother\",\n            sname: \"Mom\",\n            birth: \"1/4/1993\",\n            gender: \"female\",\n            living: true,\n            parent: 0\n          }, {\n            key: \"grandfamom\",\n            label: \"Grandfather Mom\",\n            color: \"blue\",\n            fname: \"Grandfather\",\n            sname: \"Mom\",\n            birth: \"1/4/1993\",\n            gender: \"male\",\n            living: true,\n            parent: 0\n          }, {\n            key: \"grandmadad\",\n            label: \"Grandmother Dad\",\n            color: \"pink\",\n            fname: \"Grandmother\",\n            sname: \"Dad\",\n            birth: \"1/4/1993\",\n            gender: \"female\",\n            living: true,\n            parent: 0\n          }, {\n            key: \"grandfadad\",\n            label: \"Grandfather Dad\",\n            color: \"blue\",\n            fname: \"Grandfather\",\n            sname: \"Dad\",\n            birth: \"1/4/1993\",\n            gender: \"male\",\n            living: true,\n            parent: 0\n          }],\n          linkDataArray: [{\n            from: \"mother\",\n            to: \"me\"\n          }, {\n            from: \"father\",\n            to: \"me\"\n          }, {\n            from: \"grandmamom\",\n            to: \"mother\"\n          }, {\n            from: \"grandfamom\",\n            to: \"mother\"\n          }, {\n            from: \"grandmadad\",\n            to: \"father\"\n          }, {\n            from: \"grandfadad\",\n            to: \"father\"\n          }]\n        }\n      }));\n    }\n  }, {\n    key: \"updateColorHandler\",\n    value: function updateColorHandler() {}\n  }, {\n    key: \"createDiagram\",\n    value: function createDiagram(diagramId) {\n      var _this2 = this;\n\n      var $ = go.GraphObject.make;\n      var myDiagram = $(go.Diagram, diagramId, {\n        initialContentAlignment: go.Spot.Center,\n        layout: $(go.TreeLayout, {\n          angle: 90,\n          arrangement: go.TreeLayout.ArrangementHorizontal,\n          treeStyle: go.TreeLayout.StyleLayered,\n          layerSpacing: 50\n        }),\n        isReadOnly: false,\n        allowHorizontalScroll: true,\n        allowVerticalScroll: true,\n        allowZoom: false,\n        allowSelect: true,\n        autoScale: Diagram.Uniform,\n        contentAlignment: go.Spot.Center //TextEdited: this.onTextEdited\n\n      });\n      myDiagram.toolManager.panningTool.isEnabled = false;\n      myDiagram.toolManager.mouseWheelBehavior = ToolManager.WheelScroll;\n      myDiagram.nodeTemplate = $(go.Node, 'Auto', {\n        selectionChanged: function selectionChanged(node) {\n          return _this2.nodeSelectionHandler(node.key, node.isSelected);\n        }\n      }, $(go.Shape, 'RoundedRectangle', {\n        strokeWidth: 0\n      }, new go.Binding('fill', 'color')), $(go.TextBlock, {\n        margin: 8,\n        editable: false\n      }, new go.Binding('text', 'label'), new go.Binding('color', 'white')));\n      myDiagram.linkTemplate = $(go.Link, {\n        routing: go.Link.Orthogonal,\n        corner: 5\n      }, $(go.Shape, {\n        strokeWidth: 3,\n        stroke: \"#555\"\n      }));\n      return myDiagram;\n    }\n  }, {\n    key: \"modelChangeHandler\",\n    value: function modelChangeHandler(event) {\n      switch (event.eventType) {\n        case ModelChangeEventType.Remove:\n          if (event.nodeData) {\n            this.removeNode(event.nodeData.key);\n          }\n\n          if (event.linkData) {\n            this.removeLink(event.linkData);\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"addNode\",\n    value: function addNode() {\n      var _this3 = this;\n\n      if (this.onAddCheck()) {\n        var fname = this.fname.current.value;\n        var sname = this.sname.current.value;\n        var gender = this.female.current.checked ? \"female\" : this.male.current.checked ? \"male\" : \"other\";\n        var newNodeId = 'node' + this.nodeId;\n        var newNodeName = \"Name: \" + fname + ' ' + sname + \"\\n\" + \"Birthday: \" + this.birth.current.value + \"\\n\" + \"Gender: \" + gender;\n        var selectedIndex = this.state.model.nodeDataArray.findIndex(function (node) {\n          return node.key === _this3.selectedNodeKey;\n        });\n\n        if (!this.editFlag) {\n          var linksToAdd;\n\n          if (this.addChild || this.state.model.nodeDataArray[selectedIndex] == undefined) {\n            linksToAdd = this.state.selectedNodeKeys.map(function (parent) {\n              return {\n                from: parent,\n                to: newNodeId\n              };\n            });\n          } else {\n            if (this.state.model.nodeDataArray[selectedIndex].parent == 2) return;\n            linksToAdd = this.state.selectedNodeKeys.map(function (parent) {\n              return {\n                from: newNodeId,\n                to: parent\n              };\n            });\n            this.state.model.nodeDataArray[selectedIndex] = {\n              key: this.state.model.nodeDataArray[selectedIndex].key,\n              label: this.state.model.nodeDataArray[selectedIndex].label,\n              color: this.state.model.nodeDataArray[selectedIndex].color,\n              fname: this.state.model.nodeDataArray[selectedIndex].fname,\n              sname: this.state.model.nodeDataArray[selectedIndex].sname,\n              birth: this.state.model.nodeDataArray[selectedIndex].birth,\n              gender: this.state.model.nodeDataArray[selectedIndex].gender,\n              living: this.state.model.nodeDataArray[selectedIndex].living,\n              parent: this.state.model.nodeDataArray[selectedIndex].parent + 1\n            };\n            this.forceUpdate();\n          }\n\n          this.setState(_objectSpread({}, this.state, {\n            model: _objectSpread({}, this.state.model, {\n              nodeDataArray: _toConsumableArray(this.state.model.nodeDataArray).concat([{\n                key: newNodeId,\n                label: newNodeName,\n                color: gender == \"female\" ? \"pink\" : gender == \"male\" ? \"blue\" : \"yellow\",\n                fname: fname,\n                sname: sname,\n                birth: this.birth.current.value,\n                gender: gender,\n                living: this.living.current.checked,\n                parent: 0\n              }]),\n              linkDataArray: linksToAdd.length > 0 ? _toConsumableArray(this.state.model.linkDataArray).concat(linksToAdd) : _toConsumableArray(this.state.model.linkDataArray)\n            })\n          }));\n          this.nodeId += 1;\n        } else if (this.selectedNodeKey != null) {\n          this.state.model.nodeDataArray[selectedIndex] = {\n            key: this.selectedNodeKey,\n            label: newNodeName,\n            color: gender == \"female\" ? \"pink\" : gender == \"male\" ? \"blue\" : \"yellow\",\n            fname: fname,\n            sname: sname,\n            birth: this.birth.current.value,\n            gender: gender,\n            living: this.living.current.checked,\n            parent: this.state.model.nodeDataArray[selectedIndex].parent\n          };\n          this.forceUpdate();\n          this.updateNodeText(this.selectedNodeKey, newNodeName);\n          this.showfname.current.innerHTML = fname;\n          this.showsname.current.innerHTML = sname;\n          this.showbirth.current.innerHTML = this.birth.current.value;\n        }\n\n        this.editFlag = false;\n        this.fname.current.value = \"\";\n        this.sname.current.value = \"\";\n        this.birth.current.value = \"\";\n      }\n    }\n  }, {\n    key: \"removeNode\",\n    value: function removeNode(nodeKey) {\n      var nodeToRemoveIndex = this.state.model.nodeDataArray.findIndex(function (node) {\n        return node.key === nodeKey;\n      });\n\n      if (nodeToRemoveIndex === -1) {\n        return;\n      }\n\n      this.setState(_objectSpread({}, this.state, {\n        model: _objectSpread({}, this.state.model, {\n          nodeDataArray: _toConsumableArray(this.state.model.nodeDataArray.slice(0, nodeToRemoveIndex)).concat(_toConsumableArray(this.state.model.nodeDataArray.slice(nodeToRemoveIndex + 1)))\n        })\n      }));\n    }\n  }, {\n    key: \"removeLink\",\n    value: function removeLink(linKToRemove) {\n      var linkToRemoveIndex = this.state.model.linkDataArray.findIndex(function (link) {\n        return link.from === linKToRemove.from && link.to === linKToRemove.to;\n      });\n\n      if (linkToRemoveIndex === -1) {\n        return;\n      }\n\n      return _objectSpread({}, this.state, {\n        model: _objectSpread({}, this.state.model, {\n          linkDataArray: _toConsumableArray(this.state.model.linkDataArray.slice(0, linkToRemoveIndex)).concat(_toConsumableArray(this.state.model.linkDataArray.slice(linkToRemoveIndex + 1)))\n        })\n      });\n    }\n  }, {\n    key: \"updateNodeText\",\n    value: function updateNodeText(nodeKey, text) {\n      var nodeToUpdateIndex = this.state.model.nodeDataArray.findIndex(function (node) {\n        return node.key === nodeKey;\n      });\n\n      if (nodeToUpdateIndex === -1) {\n        return;\n      }\n\n      this.setState(_objectSpread({}, this.state, {\n        model: _objectSpread({}, this.state.model, {\n          nodeDataArray: _toConsumableArray(this.state.model.nodeDataArray.slice(0, nodeToUpdateIndex)).concat([_objectSpread({}, this.state.model.nodeDataArray[nodeToUpdateIndex], {\n            label: text\n          })], _toConsumableArray(this.state.model.nodeDataArray.slice(nodeToUpdateIndex + 1)))\n        })\n      }));\n    }\n  }, {\n    key: \"nodeSelectionHandler\",\n    value: function nodeSelectionHandler(nodeKey, isSelected) {\n      var _this4 = this;\n\n      if (isSelected) {\n        this.setState(_objectSpread({}, this.state, {\n          selectedNodeKeys: _toConsumableArray(this.state.selectedNodeKeys).concat([nodeKey])\n        }));\n        this.selectedNodeKey = nodeKey;\n        var selectedNodeIndex = this.state.model.nodeDataArray.findIndex(function (node) {\n          return node.key === _this4.selectedNodeKey;\n        });\n        this.showfname.current.innerHTML = this.state.model.nodeDataArray[selectedNodeIndex].fname;\n        this.showsname.current.innerHTML = this.state.model.nodeDataArray[selectedNodeIndex].sname;\n        this.showbirth.current.innerHTML = this.state.model.nodeDataArray[selectedNodeIndex].birth;\n      } else {\n        var nodeIndexToRemove = this.state.selectedNodeKeys.findIndex(function (key) {\n          return key === nodeKey;\n        });\n\n        if (nodeIndexToRemove === -1) {\n          return;\n        }\n\n        this.setState(_objectSpread({}, this.state, {\n          selectedNodeKeys: _toConsumableArray(this.state.selectedNodeKeys.slice(0, nodeIndexToRemove)).concat(_toConsumableArray(this.state.selectedNodeKeys.slice(nodeIndexToRemove + 1)))\n        }));\n      }\n    }\n  }, {\n    key: \"onTextEdited\",\n    value: function onTextEdited(e) {\n      var tb = e.subject;\n\n      if (tb === null) {\n        return;\n      }\n\n      var node = tb.part;\n\n      if (node instanceof go.Node) {\n        this.updateNodeText(node.key, tb.text);\n      }\n    }\n  }, {\n    key: \"onAddCheck\",\n    value: function onAddCheck() {\n      if (this.fname.current.value == \"\" || this.sname.current.value == \"\" || this.birth.current.value == \"\") return false;\n      return true;\n    }\n  }, {\n    key: \"onAddCancel\",\n    value: function onAddCancel() {\n      this.editFlag = false;\n      this.addPersonalForm.current.style.display = \"none\";\n      this.editPersonalForm.current.style.display = \"block\";\n    }\n  }, {\n    key: \"onEdit\",\n    value: function onEdit() {\n      var _this5 = this;\n\n      this.editFlag = true;\n      this.addPersonalForm.current.style.display = \"block\";\n      this.editPersonalForm.current.style.display = \"none\";\n      var selectedEditIndex = this.state.model.nodeDataArray.findIndex(function (node) {\n        return node.key === _this5.selectedNodeKey;\n      });\n\n      if (this.state.model.nodeDataArray[selectedEditIndex] != undefined) {\n        this.fname.current.value = this.state.model.nodeDataArray[selectedEditIndex].fname;\n        this.sname.current.value = this.state.model.nodeDataArray[selectedEditIndex].sname;\n        this.birth.current.value = this.state.model.nodeDataArray[selectedEditIndex].birth;\n\n        switch (this.state.model.nodeDataArray[selectedEditIndex].gender) {\n          case \"female\":\n            this.female.current.checked = true;\n            break;\n\n          case \"male\":\n            this.male.current.checked = true;\n            break;\n\n          case \"other\":\n            this.other.current.checked = true;\n            break;\n        }\n\n        this.living.current.checked = this.state.model.nodeDataArray[selectedEditIndex].living;\n      }\n    }\n  }, {\n    key: \"onAddChild\",\n    value: function onAddChild() {\n      this.addChild = true;\n      this.addChildTitle.current.innerHTML = \"Add Child\";\n    }\n  }, {\n    key: \"onAddParent\",\n    value: function onAddParent() {\n      this.addChild = false;\n      this.addChildTitle.current.innerHTML = \"Add Parent\";\n    }\n  }]);\n\n  return MyDiagram;\n}(React.Component);\n\nexport default MyDiagram;","map":{"version":3,"sources":["E:\\projects\\merger\\front-end-merger\\src\\Components\\MyDiagram.js"],"names":["React","go","ToolManager","Diagram","GojsDiagram","ModelChangeEventType","LeftSide","MyDiagram","props","nodeId","addChild","addChildTitle","createRef","addPersonalForm","editPersonalForm","fname","sname","birth","female","male","other","selectedGender","birthday","living","showfname","showsname","showbirth","editFlag","createDiagram","bind","modelChangeHandler","initModelHandler","updateColorHandler","nodeSelectionHandler","removeNode","removeLink","addNode","updateNodeText","onTextEdited","onAddCheck","onAddCancel","onEdit","onAddChild","onAddParent","selectedNodeKey","state","selectedNodeKeys","model","nodeDataArray","key","label","color","gender","parent","linkDataArray","marginTop","setState","from","to","diagramId","$","GraphObject","make","myDiagram","initialContentAlignment","Spot","Center","layout","TreeLayout","angle","arrangement","ArrangementHorizontal","treeStyle","StyleLayered","layerSpacing","isReadOnly","allowHorizontalScroll","allowVerticalScroll","allowZoom","allowSelect","autoScale","Uniform","contentAlignment","toolManager","panningTool","isEnabled","mouseWheelBehavior","WheelScroll","nodeTemplate","Node","selectionChanged","node","isSelected","Shape","strokeWidth","Binding","TextBlock","margin","editable","linkTemplate","Link","routing","Orthogonal","corner","stroke","event","eventType","Remove","nodeData","linkData","current","value","checked","newNodeId","newNodeName","selectedIndex","findIndex","linksToAdd","undefined","map","forceUpdate","length","concat","innerHTML","nodeKey","nodeToRemoveIndex","slice","linKToRemove","linkToRemoveIndex","link","text","nodeToUpdateIndex","selectedNodeIndex","nodeIndexToRemove","e","tb","subject","part","style","display","selectedEditIndex","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as go from 'gojs';\r\nimport { ToolManager, Diagram } from 'gojs';\r\nimport { GojsDiagram, ModelChangeEventType } from 'react-gojs';\r\nimport './MyDiagram.css';\r\nimport LeftSide from './LeftSide';\r\n\r\nclass MyDiagram extends React.Component {\r\n    nodeId = 0;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.addChild = true;\r\n        this.addChildTitle = React.createRef();\r\n        this.addPersonalForm = React.createRef();\r\n        this.editPersonalForm = React.createRef();\r\n        this.fname = React.createRef();\r\n        this.sname = React.createRef();\r\n        this.birth = React.createRef();\r\n        this.female = React.createRef();\r\n        this.male = React.createRef();\r\n        this.other = React.createRef();\r\n        this.selectedGender = \"female\";\r\n        this.birthday = React.createRef();\r\n        this.living = React.createRef();\r\n        this.showfname = React.createRef();\r\n        this.showsname = React.createRef();\r\n        this.showbirth = React.createRef();\r\n        this.editFlag = false;\r\n        this.createDiagram = this.createDiagram.bind(this);\r\n        this.modelChangeHandler = this.modelChangeHandler.bind(this);\r\n        this.initModelHandler = this.initModelHandler.bind(this);\r\n        this.updateColorHandler = this.updateColorHandler.bind(this);\r\n        this.nodeSelectionHandler = this.nodeSelectionHandler.bind(this);\r\n        this.removeNode = this.removeNode.bind(this);\r\n        this.removeLink = this.removeLink.bind(this);\r\n        this.addNode = this.addNode.bind(this);\r\n        this.updateNodeText = this.updateNodeText.bind(this);\r\n        this.onTextEdited = this.onTextEdited.bind(this);\r\n        this.onAddCheck = this.onAddCheck.bind(this);\r\n        this.onAddCancel = this.onAddCancel.bind(this);\r\n        this.onEdit = this.onEdit.bind(this);\r\n        this.onAddChild = this.onAddChild.bind(this);\r\n        this.onAddParent = this.onAddParent.bind(this);\r\n        this.selectedNodeKey = null;\r\n        this.state = {\r\n            selectedNodeKeys: [],\r\n            model: {\r\n                nodeDataArray: [\r\n                    {\r\n                        key: \"me\",\r\n                        label: \"Me\",\r\n                        color: \"red\",\r\n                        fname: \"Me\",\r\n                        sname: \"Me\",\r\n                        birth: \"1/4/1993\",\r\n                        gender: \"male\",\r\n                        living: true,\r\n                        parent: 1\r\n                    }\r\n                ],\r\n                linkDataArray: [\r\n\r\n                ]\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return [\r\n            <div key=\"myDiagramContainer\" className=\"row my-diagram\" style={{marginTop: 30+'px'}}>\r\n                <LeftSide\r\n                    key=\"leftSide\"\r\n                    addChildTitle={this.addChildTitle}\r\n                    addPersonalForm={this.addPersonalForm}\r\n                    editPersonalForm={this.editPersonalForm}\r\n                    fname={this.fname}\r\n                    sname={this.sname}\r\n                    birth={this.birth}\r\n                    female={this.female}\r\n                    male={this.male}\r\n                    other={this.other}\r\n                    selectedGender={this.selectedGender}\r\n                    birthday={this.birthday}\r\n                    living={this.living}\r\n                    showfname={this.showfname}\r\n                    showsname={this.showsname}\r\n                    showbirth={this.showbirth}\r\n                    onInit={this.initModelHandler}\r\n                    onAddNode={this.addNode}\r\n                    onAddCancel={this.onAddCancel}\r\n                    onEdit={this.onEdit}\r\n                    onAddChild={this.onAddChild}\r\n                    onAddParent={this.onAddParent}\r\n                />\r\n                <div key=\"gojsDiagramContainer\" className=\"col-sm-8 canvas-container\">\r\n                    <GojsDiagram\r\n                        key=\"gojsDiagram\"\r\n                        diagramId=\"myDiagramDiv\"\r\n                        model={this.state.model}\r\n                        createDiagram={this.createDiagram}\r\n                        className=\"myDiagram\"\r\n                        onModelChange={this.modelChangeHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n        ];\r\n    }\r\n\r\n    initModelHandler() {\r\n        this.setState({\r\n            ...this.state,\r\n            model: {\r\n                nodeDataArray: [{\r\n                    key: \"me\",\r\n                    label: \"Me Me\",\r\n                    color: \"blue\",\r\n                    fname: \"Me\",\r\n                    sname: \"Me\",\r\n                    birth: \"1/4/1993\",\r\n                    gender: \"male\",\r\n                    living: true,\r\n                    parent: 1\r\n                },\r\n                    {\r\n                        key: \"mother\",\r\n                        label: \"Mother Mom\",\r\n                        color: \"pink\",\r\n                        fname: \"Mother\",\r\n                        sname: \"Mom\",\r\n                        birth: \"1/4/1993\",\r\n                        gender: \"female\",\r\n                        living: true,\r\n                        parent: 2\r\n                    },\r\n                    {\r\n                        key: \"father\",\r\n                        label: \"Father Dad\",\r\n                        color: \"blue\",\r\n                        fname: \"Father\",\r\n                        sname: \"Dad\",\r\n                        birth: \"1/4/1993\",\r\n                        gender: \"male\",\r\n                        living: true,\r\n                        parent: 2\r\n                    },\r\n                    {\r\n                        key: \"grandmamom\",\r\n                        label: \"Grandmother Mom\",\r\n                        color: \"pink\",\r\n                        fname: \"Grandmother\",\r\n                        sname: \"Mom\",\r\n                        birth: \"1/4/1993\",\r\n                        gender: \"female\",\r\n                        living: true,\r\n                        parent: 0\r\n                    },\r\n                    {\r\n                        key: \"grandfamom\",\r\n                        label: \"Grandfather Mom\",\r\n                        color: \"blue\",\r\n                        fname: \"Grandfather\",\r\n                        sname: \"Mom\",\r\n                        birth: \"1/4/1993\",\r\n                        gender: \"male\",\r\n                        living: true,\r\n                        parent: 0\r\n                    },\r\n                    {\r\n                        key: \"grandmadad\",\r\n                        label: \"Grandmother Dad\",\r\n                        color: \"pink\",\r\n                        fname: \"Grandmother\",\r\n                        sname: \"Dad\",\r\n                        birth: \"1/4/1993\",\r\n                        gender: \"female\",\r\n                        living: true,\r\n                        parent: 0\r\n                    },\r\n                    {\r\n                        key: \"grandfadad\",\r\n                        label: \"Grandfather Dad\",\r\n                        color: \"blue\",\r\n                        fname: \"Grandfather\",\r\n                        sname: \"Dad\",\r\n                        birth: \"1/4/1993\",\r\n                        gender: \"male\",\r\n                        living: true,\r\n                        parent: 0\r\n                    }\r\n                ],\r\n                linkDataArray: [\r\n                    { from: \"mother\", to: \"me\" },\r\n                    { from: \"father\", to: \"me\" },\r\n                    { from: \"grandmamom\", to: \"mother\" },\r\n                    { from: \"grandfamom\", to: \"mother\" },\r\n                    { from: \"grandmadad\", to: \"father\" },\r\n                    { from: \"grandfadad\", to: \"father\" }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    updateColorHandler() {\r\n    }\r\n\r\n    createDiagram(diagramId: string) {\r\n        const $ = go.GraphObject.make;\r\n\r\n        const myDiagram = $(go.Diagram, diagramId, {\r\n            initialContentAlignment: go.Spot.Center,\r\n            layout: $(go.TreeLayout, {\r\n                angle: 90,\r\n                arrangement: go.TreeLayout.ArrangementHorizontal,\r\n                treeStyle: go.TreeLayout.StyleLayered,\r\n                layerSpacing: 50\r\n            }),\r\n            isReadOnly: false,\r\n            allowHorizontalScroll: true,\r\n            allowVerticalScroll: true,\r\n            allowZoom: false,\r\n            allowSelect: true,\r\n            autoScale: Diagram.Uniform,\r\n            contentAlignment: go.Spot.Center,\r\n            //TextEdited: this.onTextEdited\r\n        });\r\n\r\n        myDiagram.toolManager.panningTool.isEnabled = false;\r\n        myDiagram.toolManager.mouseWheelBehavior = ToolManager.WheelScroll;\r\n\r\n        myDiagram.nodeTemplate = $(\r\n            go.Node,\r\n            'Auto',\r\n            {\r\n                selectionChanged: node => this.nodeSelectionHandler(node.key, node.isSelected)\r\n            },\r\n            $(go.Shape, 'RoundedRectangle', { strokeWidth: 0 }, new go.Binding('fill', 'color')),\r\n            $(go.TextBlock, { margin: 8, editable: false }, new go.Binding('text', 'label'), new go.Binding('color','white'))\r\n        );\r\n        myDiagram.linkTemplate =\r\n            $(go.Link,\r\n                { routing: go.Link.Orthogonal, corner: 5 },\r\n                $(go.Shape, { strokeWidth: 3, stroke: \"#555\" }));\r\n\r\n        return myDiagram;\r\n    }\r\n\r\n    modelChangeHandler(event) {\r\n        switch (event.eventType) {\r\n            case ModelChangeEventType.Remove:\r\n                if (event.nodeData) {\r\n                    this.removeNode(event.nodeData.key);\r\n                }\r\n                if (event.linkData) {\r\n                    this.removeLink(event.linkData);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addNode() {\r\n        if(this.onAddCheck()) {\r\n            const fname = this.fname.current.value;\r\n            const sname = this.sname.current.value;\r\n            const gender = this.female.current.checked ? \"female\" : (this.male.current.checked ? \"male\" : \"other\");\r\n            const newNodeId = 'node' + this.nodeId;\r\n            const newNodeName = \"Name: \" + fname + ' ' + sname + \"\\n\" +\r\n                \"Birthday: \"  + this.birth.current.value + \"\\n\" +\r\n                \"Gender: \" + gender;\r\n            const selectedIndex = this.state.model.nodeDataArray.findIndex(node => node.key === this.selectedNodeKey);\r\n            if(!this.editFlag) {\r\n                var linksToAdd;\r\n                if(this.addChild || this.state.model.nodeDataArray[selectedIndex] == undefined) {\r\n                    linksToAdd = this.state.selectedNodeKeys.map(parent => {\r\n                        return { from: parent, to: newNodeId };\r\n                    });\r\n                } else {\r\n                    if(this.state.model.nodeDataArray[selectedIndex].parent == 2) return;\r\n                    linksToAdd = this.state.selectedNodeKeys.map(parent => {\r\n                        return { from: newNodeId, to: parent };\r\n                    });\r\n                    this.state.model.nodeDataArray[selectedIndex] = {\r\n                        key: this.state.model.nodeDataArray[selectedIndex].key,\r\n                        label: this.state.model.nodeDataArray[selectedIndex].label,\r\n                        color: this.state.model.nodeDataArray[selectedIndex].color,\r\n                        fname: this.state.model.nodeDataArray[selectedIndex].fname,\r\n                        sname: this.state.model.nodeDataArray[selectedIndex].sname,\r\n                        birth: this.state.model.nodeDataArray[selectedIndex].birth,\r\n                        gender: this.state.model.nodeDataArray[selectedIndex].gender,\r\n                        living: this.state.model.nodeDataArray[selectedIndex].living,\r\n                        parent: this.state.model.nodeDataArray[selectedIndex].parent + 1\r\n                    };\r\n                    this.forceUpdate();\r\n                }\r\n                this.setState({\r\n                    ...this.state,\r\n                    model: {\r\n                        ...this.state.model,\r\n                        nodeDataArray: [\r\n                            ...this.state.model.nodeDataArray,\r\n                            {\r\n                                key: newNodeId,\r\n                                label: newNodeName,\r\n                                color: gender == \"female\" ? \"pink\" : (gender == \"male\" ? \"blue\" : \"yellow\"),\r\n                                fname: fname,\r\n                                sname: sname,\r\n                                birth: this.birth.current.value,\r\n                                gender: gender,\r\n                                living: this.living.current.checked,\r\n                                parent: 0\r\n                            }\r\n                        ],\r\n                        linkDataArray:\r\n                            linksToAdd.length > 0\r\n                                ? [...this.state.model.linkDataArray].concat(linksToAdd)\r\n                                : [...this.state.model.linkDataArray]\r\n                    }\r\n                });\r\n                this.nodeId += 1;\r\n            } else if(this.selectedNodeKey != null) {\r\n                this.state.model.nodeDataArray[selectedIndex] = {\r\n                    key: this.selectedNodeKey,\r\n                    label: newNodeName,\r\n                    color: gender == \"female\" ? \"pink\" : (gender == \"male\" ? \"blue\" : \"yellow\"),\r\n                    fname: fname,\r\n                    sname: sname,\r\n                    birth: this.birth.current.value,\r\n                    gender: gender,\r\n                    living: this.living.current.checked,\r\n                    parent: this.state.model.nodeDataArray[selectedIndex].parent\r\n                };\r\n                this.forceUpdate();\r\n                this.updateNodeText(this.selectedNodeKey, newNodeName);\r\n                this.showfname.current.innerHTML = fname;\r\n                this.showsname.current.innerHTML = sname;\r\n                this.showbirth.current.innerHTML = this.birth.current.value;\r\n            }\r\n            this.editFlag = false;\r\n            this.fname.current.value = \"\";\r\n            this.sname.current.value = \"\";\r\n            this.birth.current.value = \"\";\r\n        }\r\n    }\r\n\r\n    removeNode(nodeKey) {\r\n        const nodeToRemoveIndex = this.state.model.nodeDataArray.findIndex(node => node.key === nodeKey);\r\n        if (nodeToRemoveIndex === -1) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            model: {\r\n                ...this.state.model,\r\n                nodeDataArray: [\r\n                    ...this.state.model.nodeDataArray.slice(0, nodeToRemoveIndex),\r\n                    ...this.state.model.nodeDataArray.slice(nodeToRemoveIndex + 1)\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    removeLink(linKToRemove) {\r\n        const linkToRemoveIndex = this.state.model.linkDataArray.findIndex(\r\n            link => link.from === linKToRemove.from && link.to === linKToRemove.to\r\n        );\r\n        if (linkToRemoveIndex === -1) {\r\n            return;\r\n        }\r\n        return {\r\n            ...this.state,\r\n            model: {\r\n                ...this.state.model,\r\n                linkDataArray: [\r\n                    ...this.state.model.linkDataArray.slice(0, linkToRemoveIndex),\r\n                    ...this.state.model.linkDataArray.slice(linkToRemoveIndex + 1)\r\n                ]\r\n            }\r\n        };\r\n    }\r\n\r\n    updateNodeText(nodeKey, text) {\r\n        const nodeToUpdateIndex = this.state.model.nodeDataArray.findIndex(node => node.key === nodeKey);\r\n        if (nodeToUpdateIndex === -1) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            model: {\r\n                ...this.state.model,\r\n                nodeDataArray: [\r\n                    ...this.state.model.nodeDataArray.slice(0, nodeToUpdateIndex),\r\n                    {\r\n                        ...this.state.model.nodeDataArray[nodeToUpdateIndex],\r\n                        label: text\r\n                    },\r\n                    ...this.state.model.nodeDataArray.slice(nodeToUpdateIndex + 1)\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    nodeSelectionHandler(nodeKey, isSelected) {\r\n        if (isSelected) {\r\n            this.setState({\r\n                ...this.state,\r\n                selectedNodeKeys: [...this.state.selectedNodeKeys, nodeKey]\r\n            });\r\n            this.selectedNodeKey = nodeKey;\r\n            const selectedNodeIndex = this.state.model.nodeDataArray.findIndex(node => node.key === this.selectedNodeKey);\r\n            this.showfname.current.innerHTML = this.state.model.nodeDataArray[selectedNodeIndex].fname;\r\n            this.showsname.current.innerHTML = this.state.model.nodeDataArray[selectedNodeIndex].sname;\r\n            this.showbirth.current.innerHTML = this.state.model.nodeDataArray[selectedNodeIndex].birth;\r\n        } else {\r\n            const nodeIndexToRemove = this.state.selectedNodeKeys.findIndex(key => key === nodeKey);\r\n            if (nodeIndexToRemove === -1) {\r\n                return;\r\n            }\r\n            this.setState({\r\n                ...this.state,\r\n                selectedNodeKeys: [\r\n                    ...this.state.selectedNodeKeys.slice(0, nodeIndexToRemove),\r\n                    ...this.state.selectedNodeKeys.slice(nodeIndexToRemove + 1)\r\n                ]\r\n            });\r\n        }\r\n    }\r\n\r\n    onTextEdited(e) {\r\n        const tb = e.subject;\r\n        if (tb === null) {\r\n            return;\r\n        }\r\n        const node = tb.part;\r\n        if (node instanceof go.Node) {\r\n            this.updateNodeText(node.key, tb.text);\r\n        }\r\n    }\r\n\r\n    onAddCheck() {\r\n        if(this.fname.current.value == \"\" || this.sname.current.value == \"\" || this.birth.current.value == \"\") return false;\r\n        return true;\r\n    }\r\n\r\n    onAddCancel() {\r\n        this.editFlag = false;\r\n        this.addPersonalForm.current.style.display = \"none\";\r\n        this.editPersonalForm.current.style.display = \"block\";\r\n    }\r\n\r\n    onEdit() {\r\n        this.editFlag = true;\r\n        this.addPersonalForm.current.style.display = \"block\";\r\n        this.editPersonalForm.current.style.display = \"none\";\r\n        const selectedEditIndex = this.state.model.nodeDataArray.findIndex(node => node.key === this.selectedNodeKey);\r\n        if(this.state.model.nodeDataArray[selectedEditIndex] != undefined) {\r\n            this.fname.current.value = this.state.model.nodeDataArray[selectedEditIndex].fname;\r\n            this.sname.current.value = this.state.model.nodeDataArray[selectedEditIndex].sname;\r\n            this.birth.current.value = this.state.model.nodeDataArray[selectedEditIndex].birth;\r\n            switch (this.state.model.nodeDataArray[selectedEditIndex].gender) {\r\n                case \"female\":\r\n                    this.female.current.checked = true; break;\r\n                case \"male\":\r\n                    this.male.current.checked = true; break;\r\n                case \"other\":\r\n                    this.other.current.checked = true; break;\r\n            }\r\n            this.living.current.checked = this.state.model.nodeDataArray[selectedEditIndex].living;\r\n        }\r\n    }\r\n\r\n    onAddChild() {\r\n        this.addChild = true;\r\n        this.addChildTitle.current.innerHTML = \"Add Child\";\r\n    }\r\n\r\n    onAddParent() {\r\n        this.addChild = false;\r\n        this.addChildTitle.current.innerHTML = \"Add Parent\";\r\n    }\r\n}\r\n\r\nexport default MyDiagram;"]},"metadata":{},"sourceType":"module"}