// Code generated by coz. DO NOT EDIT.

/**
 * Browser utility for the-framework
 * @module the-window
 */
'use strict';

var _d = function _d(m) {
  return m && 'default' in m ? m.default : m;
};

import get_ from './get';
import line_ from './line';
import once_ from './once';
import rescue_ from './rescue';
import set_ from './set';
import show_ from './show'; // `module.exports` overrides these `exports.*`, but still needs them for lebab (https://github.com/lebab/lebab)

export var get = _d(get_);
export var line = _d(line_);
export var once = _d(once_);
export var rescue = _d(rescue_);
export var set = _d(set_);
export var show = _d(show_);
export default {
  get: _d(get_),
  line: _d(line_),
  once: _d(once_),
  rescue: _d(rescue_),
  set: _d(set_),
  show: _d(show_)
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIl9kIiwibSIsImRlZmF1bHQiLCJnZXRfIiwibGluZV8iLCJvbmNlXyIsInJlc2N1ZV8iLCJzZXRfIiwic2hvd18iLCJnZXQiLCJsaW5lIiwib25jZSIsInJlc2N1ZSIsInNldCIsInNob3ciXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBOzs7O0FBSUE7O0FBRUEsSUFBTUEsRUFBRSxHQUFHLFNBQUxBLEVBQUssQ0FBQ0MsQ0FBRDtBQUFBLFNBQVFBLENBQUMsSUFBSSxhQUFhQSxDQUFuQixHQUF3QkEsQ0FBQyxDQUFDQyxPQUExQixHQUFvQ0QsQ0FBM0M7QUFBQSxDQUFYOztBQUVBLE9BQU9FLElBQVAsTUFBaUIsT0FBakI7QUFDQSxPQUFPQyxLQUFQLE1BQWtCLFFBQWxCO0FBQ0EsT0FBT0MsS0FBUCxNQUFrQixRQUFsQjtBQUNBLE9BQU9DLE9BQVAsTUFBb0IsVUFBcEI7QUFDQSxPQUFPQyxJQUFQLE1BQWlCLE9BQWpCO0FBQ0EsT0FBT0MsS0FBUCxNQUFrQixRQUFsQixDLENBRUE7O0FBQ0EsT0FBTyxJQUFJQyxHQUFHLEdBQUdULEVBQUUsQ0FBQ0csSUFBRCxDQUFaO0FBRVAsT0FBTyxJQUFJTyxJQUFJLEdBQUdWLEVBQUUsQ0FBQ0ksS0FBRCxDQUFiO0FBQ1AsT0FBTyxJQUFJTyxJQUFJLEdBQUdYLEVBQUUsQ0FBQ0ssS0FBRCxDQUFiO0FBQ1AsT0FBTyxJQUFJTyxNQUFNLEdBQUdaLEVBQUUsQ0FBQ00sT0FBRCxDQUFmO0FBQ1AsT0FBTyxJQUFJTyxHQUFHLEdBQUdiLEVBQUUsQ0FBQ08sSUFBRCxDQUFaO0FBQ1AsT0FBTyxJQUFJTyxJQUFJLEdBQUdkLEVBQUUsQ0FBQ1EsS0FBRCxDQUFiO0FBRVAsZUFBZTtBQUNiQyxFQUFBQSxHQUFHLEVBQUVULEVBQUUsQ0FBQ0csSUFBRCxDQURNO0FBRWJPLEVBQUFBLElBQUksRUFBRVYsRUFBRSxDQUFDSSxLQUFELENBRks7QUFHYk8sRUFBQUEsSUFBSSxFQUFFWCxFQUFFLENBQUNLLEtBQUQsQ0FISztBQUliTyxFQUFBQSxNQUFNLEVBQUVaLEVBQUUsQ0FBQ00sT0FBRCxDQUpHO0FBS2JPLEVBQUFBLEdBQUcsRUFBRWIsRUFBRSxDQUFDTyxJQUFELENBTE07QUFNYk8sRUFBQUEsSUFBSSxFQUFFZCxFQUFFLENBQUNRLEtBQUQ7QUFOSyxDQUFmIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvZGUgZ2VuZXJhdGVkIGJ5IGNvei4gRE8gTk9UIEVESVQuXG4vKipcbiAqIEJyb3dzZXIgdXRpbGl0eSBmb3IgdGhlLWZyYW1ld29ya1xuICogQG1vZHVsZSB0aGUtd2luZG93XG4gKi9cbid1c2Ugc3RyaWN0J1xuXG5jb25zdCBfZCA9IChtKSA9PiAobSAmJiAnZGVmYXVsdCcgaW4gbSkgPyBtLmRlZmF1bHQgOiBtXG5cbmltcG9ydCBnZXRfIGZyb20gJy4vZ2V0JztcbmltcG9ydCBsaW5lXyBmcm9tICcuL2xpbmUnO1xuaW1wb3J0IG9uY2VfIGZyb20gJy4vb25jZSc7XG5pbXBvcnQgcmVzY3VlXyBmcm9tICcuL3Jlc2N1ZSc7XG5pbXBvcnQgc2V0XyBmcm9tICcuL3NldCc7XG5pbXBvcnQgc2hvd18gZnJvbSAnLi9zaG93JztcblxuLy8gYG1vZHVsZS5leHBvcnRzYCBvdmVycmlkZXMgdGhlc2UgYGV4cG9ydHMuKmAsIGJ1dCBzdGlsbCBuZWVkcyB0aGVtIGZvciBsZWJhYiAoaHR0cHM6Ly9naXRodWIuY29tL2xlYmFiL2xlYmFiKVxuZXhwb3J0IHZhciBnZXQgPSBfZChnZXRfKTtcblxuZXhwb3J0IHZhciBsaW5lID0gX2QobGluZV8pO1xuZXhwb3J0IHZhciBvbmNlID0gX2Qob25jZV8pO1xuZXhwb3J0IHZhciByZXNjdWUgPSBfZChyZXNjdWVfKTtcbmV4cG9ydCB2YXIgc2V0ID0gX2Qoc2V0Xyk7XG5leHBvcnQgdmFyIHNob3cgPSBfZChzaG93Xyk7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZ2V0OiBfZChnZXRfKSxcbiAgbGluZTogX2QobGluZV8pLFxuICBvbmNlOiBfZChvbmNlXyksXG4gIHJlc2N1ZTogX2QocmVzY3VlXyksXG4gIHNldDogX2Qoc2V0XyksXG4gIHNob3c6IF9kKHNob3dfKSxcbn07XG4iXX0=