// Code generated by coz. DO NOT EDIT.

/**
 * Browser utility for the-framework
 * @module the-window
 */
'use strict';

var _d = function _d(m) {
  return m && 'default' in m ? m.default : m;
};

var get_ = require('./get');

var line_ = require('./line');

var once_ = require('./once');

var rescue_ = require('./rescue');

var set_ = require('./set');

var show_ = require('./show'); // `module.exports` overrides these `exports.*`, but still needs them for lebab (https://github.com/lebab/lebab)


exports.get = _d(get_);
exports.line = _d(line_);
exports.once = _d(once_);
exports.rescue = _d(rescue_);
exports.set = _d(set_);
exports.show = _d(show_);
module.exports = {
  get: _d(get_),
  line: _d(line_),
  once: _d(once_),
  rescue: _d(rescue_),
  set: _d(set_),
  show: _d(show_)
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIl9kIiwibSIsImRlZmF1bHQiLCJnZXRfIiwicmVxdWlyZSIsImxpbmVfIiwib25jZV8iLCJyZXNjdWVfIiwic2V0XyIsInNob3dfIiwiZXhwb3J0cyIsImdldCIsImxpbmUiLCJvbmNlIiwicmVzY3VlIiwic2V0Iiwic2hvdyIsIm1vZHVsZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0E7Ozs7QUFJQTs7QUFFQSxJQUFNQSxFQUFFLEdBQUcsU0FBTEEsRUFBSyxDQUFDQyxDQUFEO0FBQUEsU0FBUUEsQ0FBQyxJQUFJLGFBQWFBLENBQW5CLEdBQXdCQSxDQUFDLENBQUNDLE9BQTFCLEdBQW9DRCxDQUEzQztBQUFBLENBQVg7O0FBRUEsSUFBTUUsSUFBSSxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFwQjs7QUFDQSxJQUFNQyxLQUFLLEdBQUdELE9BQU8sQ0FBQyxRQUFELENBQXJCOztBQUNBLElBQU1FLEtBQUssR0FBR0YsT0FBTyxDQUFDLFFBQUQsQ0FBckI7O0FBQ0EsSUFBTUcsT0FBTyxHQUFHSCxPQUFPLENBQUMsVUFBRCxDQUF2Qjs7QUFDQSxJQUFNSSxJQUFJLEdBQUdKLE9BQU8sQ0FBQyxPQUFELENBQXBCOztBQUNBLElBQU1LLEtBQUssR0FBR0wsT0FBTyxDQUFDLFFBQUQsQ0FBckIsQyxDQUVBOzs7QUFDQU0sT0FBTyxDQUFDQyxHQUFSLEdBQWNYLEVBQUUsQ0FBQ0csSUFBRCxDQUFoQjtBQUNBTyxPQUFPLENBQUNFLElBQVIsR0FBZVosRUFBRSxDQUFDSyxLQUFELENBQWpCO0FBQ0FLLE9BQU8sQ0FBQ0csSUFBUixHQUFlYixFQUFFLENBQUNNLEtBQUQsQ0FBakI7QUFDQUksT0FBTyxDQUFDSSxNQUFSLEdBQWlCZCxFQUFFLENBQUNPLE9BQUQsQ0FBbkI7QUFDQUcsT0FBTyxDQUFDSyxHQUFSLEdBQWNmLEVBQUUsQ0FBQ1EsSUFBRCxDQUFoQjtBQUNBRSxPQUFPLENBQUNNLElBQVIsR0FBZWhCLEVBQUUsQ0FBQ1MsS0FBRCxDQUFqQjtBQUVBUSxNQUFNLENBQUNQLE9BQVAsR0FBaUI7QUFDZkMsRUFBQUEsR0FBRyxFQUFFWCxFQUFFLENBQUNHLElBQUQsQ0FEUTtBQUVmUyxFQUFBQSxJQUFJLEVBQUVaLEVBQUUsQ0FBQ0ssS0FBRCxDQUZPO0FBR2ZRLEVBQUFBLElBQUksRUFBRWIsRUFBRSxDQUFDTSxLQUFELENBSE87QUFJZlEsRUFBQUEsTUFBTSxFQUFFZCxFQUFFLENBQUNPLE9BQUQsQ0FKSztBQUtmUSxFQUFBQSxHQUFHLEVBQUVmLEVBQUUsQ0FBQ1EsSUFBRCxDQUxRO0FBTWZRLEVBQUFBLElBQUksRUFBRWhCLEVBQUUsQ0FBQ1MsS0FBRDtBQU5PLENBQWpCIiwic291cmNlUm9vdCI6Ii4uL2xpYiIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvZGUgZ2VuZXJhdGVkIGJ5IGNvei4gRE8gTk9UIEVESVQuXG4vKipcbiAqIEJyb3dzZXIgdXRpbGl0eSBmb3IgdGhlLWZyYW1ld29ya1xuICogQG1vZHVsZSB0aGUtd2luZG93XG4gKi9cbid1c2Ugc3RyaWN0J1xuXG5jb25zdCBfZCA9IChtKSA9PiAobSAmJiAnZGVmYXVsdCcgaW4gbSkgPyBtLmRlZmF1bHQgOiBtXG5cbmNvbnN0IGdldF8gPSByZXF1aXJlKCcuL2dldCcpXG5jb25zdCBsaW5lXyA9IHJlcXVpcmUoJy4vbGluZScpXG5jb25zdCBvbmNlXyA9IHJlcXVpcmUoJy4vb25jZScpXG5jb25zdCByZXNjdWVfID0gcmVxdWlyZSgnLi9yZXNjdWUnKVxuY29uc3Qgc2V0XyA9IHJlcXVpcmUoJy4vc2V0JylcbmNvbnN0IHNob3dfID0gcmVxdWlyZSgnLi9zaG93JylcblxuLy8gYG1vZHVsZS5leHBvcnRzYCBvdmVycmlkZXMgdGhlc2UgYGV4cG9ydHMuKmAsIGJ1dCBzdGlsbCBuZWVkcyB0aGVtIGZvciBsZWJhYiAoaHR0cHM6Ly9naXRodWIuY29tL2xlYmFiL2xlYmFiKVxuZXhwb3J0cy5nZXQgPSBfZChnZXRfKVxuZXhwb3J0cy5saW5lID0gX2QobGluZV8pXG5leHBvcnRzLm9uY2UgPSBfZChvbmNlXylcbmV4cG9ydHMucmVzY3VlID0gX2QocmVzY3VlXylcbmV4cG9ydHMuc2V0ID0gX2Qoc2V0XylcbmV4cG9ydHMuc2hvdyA9IF9kKHNob3dfKVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0OiBfZChnZXRfKSxcbiAgbGluZTogX2QobGluZV8pLFxuICBvbmNlOiBfZChvbmNlXyksXG4gIHJlc2N1ZTogX2QocmVzY3VlXyksXG4gIHNldDogX2Qoc2V0XyksXG4gIHNob3c6IF9kKHNob3dfKSxcbn1cbiJdfQ==