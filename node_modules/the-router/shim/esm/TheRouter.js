'use strict';

import _extends from "@babel/runtime/helpers/extends";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import c from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';
import { BrowserRouter, HashRouter, Router as AbstractRouter, StaticRouter } from 'react-router-dom';
import { htmlAttributesFor } from 'the-component-util';
/**
 * Router of the-components
 */

var TheRouter =
/*#__PURE__*/
function (_React$Component) {
  _inherits(TheRouter, _React$Component);

  function TheRouter() {
    _classCallCheck(this, TheRouter);

    return _possibleConstructorReturn(this, _getPrototypeOf(TheRouter).apply(this, arguments));
  }

  _createClass(TheRouter, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var _this = this;

      var history = this.props.history;

      if (history) {
        var historyChanged = prevProps.history && prevProps.history !== history;

        if (historyChanged) {
          throw new Error('[TheRouter] You cannot change <TheRouter history>');
        }

        this.unlisten = history.listen(function () {
          _this.forceUpdate();
        });
      }
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this2 = this;

      var _this$props = this.props,
          forceRefresh = _this$props.forceRefresh,
          history = _this$props.history;

      if (history) {
        this.unlisten = history.listen(function () {
          if (forceRefresh) {
            _this2.forceUpdate();
          }
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.unlisten && this.unlisten();
    } // TODO

  }, {
    key: "getChildContext",
    value: function getChildContext() {
      var history = this.props.history;
      return {
        history: history
      };
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var basename = props.basename,
          children = props.children,
          className = props.className,
          getUserConfirmation = props.getUserConfirmation,
          history = props.history,
          keyLength = props.keyLength;
      var Router = history ? AbstractRouter : BrowserRouter;
      return React.createElement(Router, {
        basename: basename,
        getUserConfirmation: getUserConfirmation,
        history: history,
        keyLength: keyLength
      }, React.createElement("div", _extends({}, htmlAttributesFor(props, {
        except: ['className']
      }), {
        className: c('the-router', className)
      }), children));
    }
  }], [{
    key: "Hash",
    value: function Hash(_ref) {
      var basename = _ref.basename,
          children = _ref.children,
          getUserConfirmation = _ref.getUserConfirmation,
          hashType = _ref.hashType;
      return React.createElement(HashRouter, {
        basename: basename,
        getUserConfirmation: getUserConfirmation,
        hashType: hashType
      }, React.createElement("div", {
        className: "the-router-hash"
      }, children));
    }
  }, {
    key: "Static",
    value: function Static(_ref2) {
      var basename = _ref2.basename,
          children = _ref2.children,
          context = _ref2.context,
          location = _ref2.location;
      return React.createElement(StaticRouter, {
        basename: basename,
        context: context,
        location: location
      }, React.createElement("div", {
        className: "the-router-static"
      }, children));
    }
  }]);

  return TheRouter;
}(React.Component);

TheRouter.propTypes = {};
TheRouter.defaultProps = {};
TheRouter.displayName = 'TheRouter';
TheRouter.childContextTypes = {
  history: PropTypes.object
};
export default TheRouter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRoZVJvdXRlci5qcyJdLCJuYW1lcyI6WyJjIiwiUHJvcFR5cGVzIiwiUmVhY3QiLCJCcm93c2VyUm91dGVyIiwiSGFzaFJvdXRlciIsIlJvdXRlciIsIkFic3RyYWN0Um91dGVyIiwiU3RhdGljUm91dGVyIiwiaHRtbEF0dHJpYnV0ZXNGb3IiLCJUaGVSb3V0ZXIiLCJwcmV2UHJvcHMiLCJoaXN0b3J5IiwicHJvcHMiLCJoaXN0b3J5Q2hhbmdlZCIsIkVycm9yIiwidW5saXN0ZW4iLCJsaXN0ZW4iLCJmb3JjZVVwZGF0ZSIsImZvcmNlUmVmcmVzaCIsImJhc2VuYW1lIiwiY2hpbGRyZW4iLCJjbGFzc05hbWUiLCJnZXRVc2VyQ29uZmlybWF0aW9uIiwia2V5TGVuZ3RoIiwiZXhjZXB0IiwiaGFzaFR5cGUiLCJjb250ZXh0IiwibG9jYXRpb24iLCJDb21wb25lbnQiLCJwcm9wVHlwZXMiLCJkZWZhdWx0UHJvcHMiLCJkaXNwbGF5TmFtZSIsImNoaWxkQ29udGV4dFR5cGVzIiwib2JqZWN0Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFFQSxPQUFPQSxDQUFQLE1BQWMsWUFBZDtBQUNBLE9BQU9DLFNBQVAsTUFBc0IsWUFBdEI7QUFDQSxPQUFPQyxLQUFQLE1BQWtCLE9BQWxCO0FBQ0EsU0FBU0MsYUFBVCxFQUF3QkMsVUFBeEIsRUFBb0NDLE1BQU0sSUFBSUMsY0FBOUMsRUFBOERDLFlBQTlELFFBQWtGLGtCQUFsRjtBQUNBLFNBQVNDLGlCQUFULFFBQWtDLG9CQUFsQztBQUVBOzs7O0lBR01DLFM7Ozs7Ozs7Ozs7Ozs7dUNBcUJnQkMsUyxFQUFXO0FBQUE7O0FBQUEsVUFDdEJDLE9BRHNCLEdBQ1gsS0FBS0MsS0FETSxDQUN0QkQsT0FEc0I7O0FBRzdCLFVBQUlBLE9BQUosRUFBYTtBQUNYLFlBQU1FLGNBQWMsR0FBR0gsU0FBUyxDQUFDQyxPQUFWLElBQXFCRCxTQUFTLENBQUNDLE9BQVYsS0FBc0JBLE9BQWxFOztBQUNBLFlBQUlFLGNBQUosRUFB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QURGLENBREY7QUFPRDs7OztFQW5CcUJsQixLQUFLLENBQUMwQixTOztBQW9GOUJuQixTQUFTLENBQUNvQixTQUFWLEdBQXNCLEVBQXRCO0FBRUFwQixTQUFTLENBQUNxQixZQUFWLEdBQXlCLEVBQXpCO0FBRUFyQixTQUFTLENBQUNzQixXQUFWLEdBQXdCLFdBQXhCO0FBRUF0QixTQUFTLENBQUN1QixpQkFBVixHQUE4QjtBQUM1QnJCLEVBQUFBLE9BQU8sRUFBRVYsU0FBUyxDQUFDZ0M7QUFEUyxDQUE5QjtBQUlBLGVBQWV4QixTQUFmIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5pbXBvcnQgYyBmcm9tICdjbGFzc25hbWVzJ1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgQnJvd3NlclJvdXRlciwgSGFzaFJvdXRlciwgUm91dGVyIGFzIEFic3RyYWN0Um91dGVyLCBTdGF0aWNSb3V0ZXIgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJ1xuaW1wb3J0IHsgaHRtbEF0dHJpYnV0ZXNGb3IgfSBmcm9tICd0aGUtY29tcG9uZW50LXV0aWwnXG5cbi8qKlxuICogUm91dGVyIG9mIHRoZS1jb21wb25lbnRzXG4gKi9cbmNsYXNzIFRoZVJvdXRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBIYXNoICh7YmFzZW5hbWUsIGNoaWxkcmVuLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBoYXNoVHlwZX0pIHtcbiAgICByZXR1cm4gKFxuICAgICAgPEhhc2hSb3V0ZXIgey4uLiB7YmFzZW5hbWUsIGdldFVzZXJDb25maXJtYXRpb24sIGhhc2hUeXBlfX0+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSd0aGUtcm91dGVyLWhhc2gnPlxuICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L0hhc2hSb3V0ZXI+XG4gICAgKVxuICB9XG5cbiAgc3RhdGljIFN0YXRpYyAoe2Jhc2VuYW1lLCBjaGlsZHJlbiwgY29udGV4dCwgbG9jYXRpb259KSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxTdGF0aWNSb3V0ZXIgey4uLntiYXNlbmFtZSwgY29udGV4dCwgbG9jYXRpb259fT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J3RoZS1yb3V0ZXItc3RhdGljJz5cbiAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9TdGF0aWNSb3V0ZXI+XG4gICAgKVxuICB9XG5cbiAgY29tcG9uZW50RGlkVXBkYXRlIChwcmV2UHJvcHMpIHtcbiAgICBjb25zdCB7aGlzdG9yeX0gPSB0aGlzLnByb3BzXG5cbiAgICBpZiAoaGlzdG9yeSkge1xuICAgICAgY29uc3QgaGlzdG9yeUNoYW5nZWQgPSBwcmV2UHJvcHMuaGlzdG9yeSAmJiBwcmV2UHJvcHMuaGlzdG9yeSAhPT0gaGlzdG9yeVxuICAgICAgaWYgKGhpc3RvcnlDaGFuZ2VkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignW1RoZVJvdXRlcl0gWW91IGNhbm5vdCBjaGFuZ2UgPFRoZVJvdXRlciBoaXN0b3J5PicpXG4gICAgICB9XG4gICAgICB0aGlzLnVubGlzdGVuID0gaGlzdG9yeS5saXN0ZW4oKCkgPT4ge1xuICAgICAgICB0aGlzLmZvcmNlVXBkYXRlKClcbiAgICAgIH0pXG4gICAgfVxuICB9XG5cbiAgY29tcG9uZW50V2lsbE1vdW50ICgpIHtcbiAgICBjb25zdCB7Zm9yY2VSZWZyZXNoLCBoaXN0b3J5fSA9IHRoaXMucHJvcHNcbiAgICBpZiAoaGlzdG9yeSkge1xuICAgICAgdGhpcy51bmxpc3RlbiA9IGhpc3RvcnkubGlzdGVuKCgpID0+IHtcbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHRoaXMuZm9yY2VVcGRhdGUoKVxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxVbm1vdW50ICgpIHtcbiAgICB0aGlzLnVubGlzdGVuICYmIHRoaXMudW5saXN0ZW4oKVxuICB9XG5cbiAgLy8gVE9ET1xuICBnZXRDaGlsZENvbnRleHQgKCkge1xuICAgIGNvbnN0IHtoaXN0b3J5fSA9IHRoaXMucHJvcHNcbiAgICByZXR1cm4ge2hpc3Rvcnl9XG4gIH1cblxuICByZW5kZXIgKCkge1xuICAgIGNvbnN0IHtwcm9wc30gPSB0aGlzXG4gICAgY29uc3Qge1xuICAgICAgYmFzZW5hbWUsXG4gICAgICBjaGlsZHJlbixcbiAgICAgIGNsYXNzTmFtZSxcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBoaXN0b3J5LFxuICAgICAga2V5TGVuZ3RoLFxuICAgIH0gPSBwcm9wc1xuXG4gICAgY29uc3QgUm91dGVyID0gaGlzdG9yeSA/IEFic3RyYWN0Um91dGVyIDogQnJvd3NlclJvdXRlclxuICAgIHJldHVybiAoXG4gICAgICA8Um91dGVyIHsuLi57XG4gICAgICAgIGJhc2VuYW1lLFxuICAgICAgICBnZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgICBoaXN0b3J5LFxuICAgICAgICBrZXlMZW5ndGgsXG4gICAgICB9fT5cbiAgICAgICAgPGRpdiB7Li4uaHRtbEF0dHJpYnV0ZXNGb3IocHJvcHMsIHtleGNlcHQ6IFsnY2xhc3NOYW1lJ119KX1cbiAgICAgICAgICAgICBjbGFzc05hbWU9e2MoJ3RoZS1yb3V0ZXInLCBjbGFzc05hbWUpfT5cbiAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9Sb3V0ZXI+XG4gICAgKVxuICB9XG59XG5cblRoZVJvdXRlci5wcm9wVHlwZXMgPSB7fVxuXG5UaGVSb3V0ZXIuZGVmYXVsdFByb3BzID0ge31cblxuVGhlUm91dGVyLmRpc3BsYXlOYW1lID0gJ1RoZVJvdXRlcidcblxuVGhlUm91dGVyLmNoaWxkQ29udGV4dFR5cGVzID0ge1xuICBoaXN0b3J5OiBQcm9wVHlwZXMub2JqZWN0LFxufVxuXG5leHBvcnQgZGVmYXVsdCBUaGVSb3V0ZXJcbiJdfQ==