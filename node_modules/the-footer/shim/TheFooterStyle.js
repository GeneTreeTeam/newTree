'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _theComponentUtil = require("the-component-util");

var _theStyle = require("the-style");

/** Style for TheFooter */
var TheFooterStyle = function TheFooterStyle(_ref) {
  var className = _ref.className,
      id = _ref.id,
      options = _ref.options;
  return _react.default.createElement(_theStyle.TheStyle, (0, _extends2.default)({
    id: id
  }, {
    className: (0, _classnames.default)('the-footer-style', className),
    styles: TheFooterStyle.data(options)
  }));
};

TheFooterStyle.displayName = 'TheFooterStyle';
TheFooterStyle.propTypes = {
  /** Style options */
  options: _propTypes.default.object
};
TheFooterStyle.defaultProps = {
  options: {}
};

TheFooterStyle.data = function (options) {
  var ThemeValues = _theStyle.TheStyle.ThemeValues;
  var _options$lightBorderC = options.lightBorderColor,
      lightBorderColor = _options$lightBorderC === void 0 ? ThemeValues.lightBorderColor : _options$lightBorderC,
      _options$lightLinkCol = options.lightLinkColor,
      lightLinkColor = _options$lightLinkCol === void 0 ? ThemeValues.lightLinkColor : _options$lightLinkCol;
  return (0, _theComponentUtil.asStyleData)('.the-footer', {
    '.the-footer-copyright': {
      display: 'inline-block',
      padding: '0 8px'
    },
    '.the-footer-inner': {
      alignItems: 'center',
      borderTop: "1px solid ".concat(lightBorderColor),
      display: 'flex',
      flexWrap: 'wrap',
      fontSize: 'smaller',
      justifyContent: 'space-between',
      padding: '32px 0'
    },
    '.the-footer-link': {
      color: lightLinkColor,
      padding: '0 8px',
      textDecoration: 'none'
    },
    '.the-footer-links': {
      display: 'flex'
    },
    '.the-footer-row': {
      alignItems: 'center',
      display: 'flex',
      flexWrap: 'wrap',
      fontSize: 'smaller',
      justifyContent: 'space-between',
      margin: '8px 0'
    },
    '': {}
  });
};

var _default = TheFooterStyle;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRoZUZvb3RlclN0eWxlLmpzeCJdLCJuYW1lcyI6WyJUaGVGb290ZXJTdHlsZSIsImNsYXNzTmFtZSIsImlkIiwib3B0aW9ucyIsImRhdGEiLCJkaXNwbGF5TmFtZSIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsIm9iamVjdCIsImRlZmF1bHRQcm9wcyIsIlRoZW1lVmFsdWVzIiwiVGhlU3R5bGUiLCJsaWdodEJvcmRlckNvbG9yIiwibGlnaHRMaW5rQ29sb3IiLCJkaXNwbGF5IiwicGFkZGluZyIsImFsaWduSXRlbXMiLCJib3JkZXJUb3AiLCJmbGV4V3JhcCIsImZvbnRTaXplIiwianVzdGlmeUNvbnRlbnQiLCJjb2xvciIsInRleHREZWNvcmF0aW9uIiwibWFyZ2luIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTtBQUNBLElBQU1BLGNBQWMsR0FBRyxTQUFqQkEsY0FBaUI7QUFBQSxNQUFFQyxTQUFGLFFBQUVBLFNBQUY7QUFBQSxNQUFhQyxFQUFiLFFBQWFBLEVBQWI7QUFBQSxNQUFpQkMsT0FBakIsUUFBaUJBLE9BQWpCO0FBQUEsU0FDckIsNkJBQUMsa0JBQUQseUJBQWM7QUFBQ0QsSUFBQUEsRUFBRSxFQUFGQTtBQUFELEdBQWQ7QUFDVSxJQUFBLFNBQVMsRUFBRSx5QkFBVyxrQkFBWCxFQUErQkQsU0FBL0IsQ0FEckI7QUFFVSxJQUFBLE1BQU0sRUFBRUQsY0FBYyxDQUFDSSxJQUFmLENBQW9CRCxPQUFwQjtBQUZsQixLQURxQjtBQUFBLENBQXZCOztBQU9BSCxjQUFjLENBQUNLLFdBQWYsR0FBNkIsZ0JBQTdCO0FBQ0FMLGNBQWMsQ0FBQ00sU0FBZixHQUEyQjtBQUN6QjtBQUNBSCxFQUFBQSxPQUFPLEVBQUVJLG1CQUFVQztBQUZNLENBQTNCO0FBS0FSLGNBQWMsQ0FBQ1MsWUFBZixHQUE4QjtBQUM1Qk4sRUFBQUEsT0FBTyxFQUFFO0FBRG1CLENBQTlCOztBQUlBSCxjQUFjLENBQUNJLElBQWYsR0FBc0IsVUFBQ0QsT0FBRCxFQUFhO0FBQUEsTUFDMUJPLFdBRDBCLEdBQ1hDLGtCQURXLENBQzFCRCxXQUQwQjtBQUFBLDhCQUs3QlAsT0FMNkIsQ0FHL0JTLGdCQUgrQjtBQUFBLE1BRy9CQSxnQkFIK0Isc0NBR1pGLFdBQVcsQ0FBQ0UsZ0JBSEE7QUFBQSw4QkFLN0JULE9BTDZCLENBSS9CVSxjQUorQjtBQUFBLE1BSS9CQSxjQUorQixzQ0FJZEgsV0FBVyxDQUFDRyxjQUpFO0FBTWpDLFNBQU8sbUNBQVksYUFBWixFQUEyQjtBQUNoQyw2QkFBeUI7QUFDdkJDLE1BQUFBLE9BQU8sRUFBRSxjQURjO0FBRXZCQyxNQUFBQSxPQUFPLEVBQUU7QUFGYyxLQURPO0FBS2hDLHlCQUFxQjtBQUNuQkMsTUFBQUEsVUFBVSxFQUFFLFFBRE87QUFFbkJDLE1BQUFBLFNBQVMsc0JBQWVMLGdCQUFmLENBRlU7QUFHbkJFLE1BQUFBLE9BQU8sRUFBRSxNQUhVO0FBSW5CSSxNQUFBQSxRQUFRLEVBQUUsTUFKUztBQUtuQkMsTUFBQUEsUUFBUSxFQUFFLFNBTFM7QUFNbkJDLE1BQUFBLGNBQWMsRUFBRSxlQU5HO0FBT25CTCxNQUFBQSxPQUFPLEVBQUU7QUFQVSxLQUxXO0FBY2hDLHdCQUFvQjtBQUNsQk0sTUFBQUEsS0FBSyxFQUFFUixjQURXO0FBRWxCRSxNQUFBQSxPQUFPLEVBQUUsT0FGUztBQUdsQk8sTUFBQUEsY0FBYyxFQUFFO0FBSEUsS0FkWTtBQW1CaEMseUJBQXFCO0FBQ25CUixNQUFBQSxPQUFPLEVBQUU7QUFEVSxLQW5CVztBQXNCaEMsdUJBQW1CO0FBQ2pCRSxNQUFBQSxVQUFVLEVBQUUsUUFESztBQUVqQkYsTUFBQUEsT0FBTyxFQUFFLE1BRlE7QUFHakJJLE1BQUFBLFFBQVEsRUFBRSxNQUhPO0FBSWpCQyxNQUFBQSxRQUFRLEVBQUUsU0FKTztBQUtqQkMsTUFBQUEsY0FBYyxFQUFFLGVBTEM7QUFNakJHLE1BQUFBLE1BQU0sRUFBRTtBQU5TLEtBdEJhO0FBOEJoQyxRQUFJO0FBOUI0QixHQUEzQixDQUFQO0FBZ0NELENBdENEOztlQXdDZXZCLGMiLCJzb3VyY2VSb290IjoiLi4vbGliIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmltcG9ydCBjbGFzc25hbWVzIGZyb20gJ2NsYXNzbmFtZXMnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBhc1N0eWxlRGF0YSB9IGZyb20gJ3RoZS1jb21wb25lbnQtdXRpbCdcbmltcG9ydCB7IFRoZVN0eWxlIH0gZnJvbSAndGhlLXN0eWxlJ1xuXG4vKiogU3R5bGUgZm9yIFRoZUZvb3RlciAqL1xuY29uc3QgVGhlRm9vdGVyU3R5bGUgPSAoe2NsYXNzTmFtZSwgaWQsIG9wdGlvbnN9KSA9PiAoXG4gIDxUaGVTdHlsZSB7Li4ue2lkfX1cbiAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NuYW1lcygndGhlLWZvb3Rlci1zdHlsZScsIGNsYXNzTmFtZSl9XG4gICAgICAgICAgICBzdHlsZXM9e1RoZUZvb3RlclN0eWxlLmRhdGEob3B0aW9ucyl9XG4gIC8+XG4pXG5cblRoZUZvb3RlclN0eWxlLmRpc3BsYXlOYW1lID0gJ1RoZUZvb3RlclN0eWxlJ1xuVGhlRm9vdGVyU3R5bGUucHJvcFR5cGVzID0ge1xuICAvKiogU3R5bGUgb3B0aW9ucyAqL1xuICBvcHRpb25zOiBQcm9wVHlwZXMub2JqZWN0LFxufVxuXG5UaGVGb290ZXJTdHlsZS5kZWZhdWx0UHJvcHMgPSB7XG4gIG9wdGlvbnM6IHt9LFxufVxuXG5UaGVGb290ZXJTdHlsZS5kYXRhID0gKG9wdGlvbnMpID0+IHtcbiAgY29uc3Qge1RoZW1lVmFsdWVzfSA9IFRoZVN0eWxlXG4gIGxldCB7XG4gICAgbGlnaHRCb3JkZXJDb2xvciA9IFRoZW1lVmFsdWVzLmxpZ2h0Qm9yZGVyQ29sb3IsXG4gICAgbGlnaHRMaW5rQ29sb3IgPSBUaGVtZVZhbHVlcy5saWdodExpbmtDb2xvcixcbiAgfSA9IG9wdGlvbnNcbiAgcmV0dXJuIGFzU3R5bGVEYXRhKCcudGhlLWZvb3RlcicsIHtcbiAgICAnLnRoZS1mb290ZXItY29weXJpZ2h0Jzoge1xuICAgICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgICBwYWRkaW5nOiAnMCA4cHgnLFxuICAgIH0sXG4gICAgJy50aGUtZm9vdGVyLWlubmVyJzoge1xuICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICBib3JkZXJUb3A6IGAxcHggc29saWQgJHtsaWdodEJvcmRlckNvbG9yfWAsXG4gICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICBmbGV4V3JhcDogJ3dyYXAnLFxuICAgICAgZm9udFNpemU6ICdzbWFsbGVyJyxcbiAgICAgIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbicsXG4gICAgICBwYWRkaW5nOiAnMzJweCAwJyxcbiAgICB9LFxuICAgICcudGhlLWZvb3Rlci1saW5rJzoge1xuICAgICAgY29sb3I6IGxpZ2h0TGlua0NvbG9yLFxuICAgICAgcGFkZGluZzogJzAgOHB4JyxcbiAgICAgIHRleHREZWNvcmF0aW9uOiAnbm9uZScsXG4gICAgfSxcbiAgICAnLnRoZS1mb290ZXItbGlua3MnOiB7XG4gICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgfSxcbiAgICAnLnRoZS1mb290ZXItcm93Jzoge1xuICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICBmbGV4V3JhcDogJ3dyYXAnLFxuICAgICAgZm9udFNpemU6ICdzbWFsbGVyJyxcbiAgICAgIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbicsXG4gICAgICBtYXJnaW46ICc4cHggMCcsXG4gICAgfSxcbiAgICAnJzoge30sXG4gIH0pXG59XG5cbmV4cG9ydCBkZWZhdWx0IFRoZUZvb3RlclN0eWxlXG4iXX0=